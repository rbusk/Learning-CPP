Mary Connolly
Lab 3 Report

A user can use the driver file for Lab 3 part 2 in order to display the name, address, zip code, and cost of shipping for six packages (three two day packages and three overnight packages) as well as the total cost to ship all six. The information is displayed in a table.

Internally, the program makes use of the base class Package and two derived classes, OvernightPackage and TwoDayPackage. The base class Package has five member variables: name, address, zip, weight (of package), and costPerOunce (to send the package). It also contains the virtual function calculateCost(). This is defined as the costPerOunce multiplied by the weight. The derived classes redefine this function. TwoDayPackage has an extra member variable, extraCost. Its calculateCost() function calls Package's calculateCost() function and adds this extra cost. OvernightPackage has the extra member variable extraCostPerOunce. Its calculateCost() function calls Package's calculateCost() function and adds the weight of the package multiplied by the extraCostPerOunce.

In main.cpp, three TwoDayPackage objects and three OvernightPackage objects are instantiated, and their addresses are added to an array of six pointers to Package. Then, a for loop is used to display the name, address, zip code, and cost for each package. This loop utilizes polymorphism by using a pointer to the base class Package to point to different objects of derived classes and use the redefined versions of the function calculateCost(). The for loop is also used to calculate the total cost of sending all the packages, which is displayed for the user after the table.

I verified that the output of the program is correct by checking the output of calculateCost() for the packages. The cost of TwoDayPackage objects is calculated correctly with the extra cost and the cost of OvernightPackage objects is calculated correctly with an extra cost per ouce. Additionally, the total cost is correctly calculated by adding the costs of all the packages. Furthermore, the constructors correctly check if the values weight, costPerOunce, extraCost, and extraCostPerOunce are negative, and if so, they switch the values to positive. (The third TwoDayPackage and OvernightPackage are instantiated with these negative values but the cost to send them is positive.)


